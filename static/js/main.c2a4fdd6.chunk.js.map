{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/filterTodos.ts","index.tsx"],"names":["Filter","TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","onSearchQuery","filter","onFilter","useState","query","setQuery","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClosing","isLoading","setIsLoading","user","setUser","useEffect","userId","catch","console","log","finally","href","email","name","App","setTodos","setSelectedTodo","searchQuery","setSearchQuery","setFilter","visibleTodos","toLowerCase","includes","filterTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2a4fdd6.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null\n  onSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, onSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo === selectedTodo,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed === true ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  onSearchQuery: React.Dispatch<React.SetStateAction<string>>,\n  filter: Filter | string,\n  onFilter: (React.Dispatch<React.SetStateAction<Filter | string>>)\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSearchQuery,\n  filter,\n  onFilter,\n}) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = (value: string) => {\n    setQuery(value);\n    onSearchQuery(value);\n  };\n\n  const handleClearButton = () => {\n    setQuery('');\n    onSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={event => onFilter(event.target.value)}\n          >\n            <option value=\"all\">{Filter.all}</option>\n            <option value=\"active\">{Filter.active}</option>\n            <option value=\"completed\">{Filter.completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => handleInput(event.target.value)}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"Clear Button\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleClearButton()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onClosing: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClosing }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(\n    () => {\n      setIsLoading(true);\n      getUser(todo.userId).then(setUser)\n        // eslint-disable-next-line no-console\n        .catch(console.log)\n        .finally(() => (setIsLoading(false)));\n    }, [todo.userId],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              aria-label=\"Delete Button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClosing}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed === true\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\nimport { filterTodo } from './utils/filterTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState<Filter | string>(Filter.all);\n\n  const visibleTodos = filterTodo(todos, searchQuery, filter);\n\n  useEffect(\n    () => {\n      setIsLoading(true);\n\n      getTodos().then(setTodos)\n        // eslint-disable-next-line no-console\n        .catch(console.log)\n        .finally(() => (setIsLoading(false)));\n    }, [],\n  );\n\n  const handleReset = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSearchQuery={setSearchQuery}\n                filter={filter}\n                onFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                onSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClosing={handleReset}\n        />\n      )}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodo = (\n  todos: Todo[],\n  searchQuery: string,\n  filter: Filter | string,\n): Todo[] => {\n  let visibleTodos = todos;\n\n  if (searchQuery) {\n    visibleTodos = visibleTodos.filter(\n      todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase()),\n    );\n  }\n\n  if (filter) {\n    switch (filter) {\n      case Filter.all: {\n        break;\n      }\n\n      case Filter.active: {\n        visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n        break;\n      }\n\n      case Filter.completed: {\n        visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return visibleTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}