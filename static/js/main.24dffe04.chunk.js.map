{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectedTodo","useState","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","cn","TodoFilter","onSearchQuery","filter","onFilter","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClosing","isLoading","setIsLoading","user","setUser","useEffect","userId","catch","console","log","finally","href","email","name","App","setTodos","searchQuery","setSearchQuery","setFilter","visibleTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24dffe04.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelectedTodo }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            // className=\"has-background-info-light\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed === true ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed === true\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectedTodo(todo);\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ntype Props = {\n  onSearchQuery: React.Dispatch<React.SetStateAction<string>>,\n  filter: string,\n  onFilter: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSearchQuery,\n  filter,\n  onFilter,\n}) => {\n  const [query, setQuery] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={event => {\n              onFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value);\n            onSearchQuery(event.target.value);\n          }}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                onSearchQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onClosing: React.Dispatch<React.SetStateAction<Todo | null>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClosing }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(\n    () => {\n      setIsLoading(true);\n      getUser(todo.userId).then(setUser)\n        // eslint-disable-next-line no-console\n        .catch(console.log)\n        .finally(() => (setIsLoading(false)));\n    }, [todo.userId],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClosing(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {todo.completed === true\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState('');\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  let visibleTodos = todos;\n\n  if (searchQuery) {\n    visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  }\n\n  if (filter) {\n    switch (filter) {\n      case 'all': {\n        break;\n      }\n\n      case 'active': {\n        visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n        break;\n      }\n\n      case 'completed': {\n        visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(\n    () => {\n      setIsLoading(true);\n      getTodos().then(setTodos)\n        // eslint-disable-next-line no-console\n        .catch(console.log)\n        .finally(() => (setIsLoading(false)));\n    }, [],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSearchQuery={setSearchQuery}\n                filter={filter}\n                onFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList todos={visibleTodos} onSelectedTodo={setSelectedTodo} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClosing={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}